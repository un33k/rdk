{"version":3,"file":"main.3783f92564684ae7ed55.bundle.js","sources":["webpack:///./src/ExitListener/ExitListener.tsx"],"sourcesContent":["import React, { Component } from 'react';\nimport { findDOMNode } from 'react-dom';\n\ninterface ExitListenerProps {\n  children: React.ReactNode;\n  onClickOutside?: (event: MouseEvent) => void;\n  onEscape?: (event: KeyboardEvent) => void;\n}\n\nexport class ExitListener extends Component<\n  ExitListenerProps\n> {\n  node: Element | null = null;\n\n  componentDidMount() {\n    this.node = findDOMNode(this) as Element;\n\n    if (this.props.onClickOutside) {\n      document.addEventListener('mousedown', this.onDocumentClick);\n    }\n\n    if (this.props.onEscape) {\n      document.addEventListener('keydown', this.onDocumentKeydown);\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.onDocumentClick);\n    document.removeEventListener('keydown', this.onDocumentKeydown);\n  }\n\n  onDocumentClick = (event: MouseEvent) => {\n    if (event.which !== 3) {\n      const contentContains =\n        this.node && this.node.contains(event.target as HTMLElement);\n\n      if (!contentContains && this.props.onClickOutside) {\n        this.props.onClickOutside(event);\n      }\n    }\n  };\n\n  onDocumentKeydown = (event: KeyboardEvent) => {\n    if (event.keyCode === 27 && this.props.onEscape) {\n      this.props.onEscape(event);\n    }\n  };\n\n  render() {\n    return this.props.children;\n  }\n}\ntry {\n    // @ts-ignore\n    ExitListener.displayName = \"ExitListener\";\n    // @ts-ignore\n    ExitListener.__docgenInfo = { \"description\": \"\", \"displayName\": \"ExitListener\", \"props\": { \"onClickOutside\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onClickOutside\", \"required\": false, \"type\": { \"name\": \"(event: MouseEvent) => void\" } }, \"onEscape\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onEscape\", \"required\": false, \"type\": { \"name\": \"(event: KeyboardEvent) => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/ExitListener/ExitListener.tsx#ExitListener\"] = { docgenInfo: ExitListener.__docgenInfo, name: \"ExitListener\", path: \"src/ExitListener/ExitListener.tsx#ExitListener\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"],"mappings":"AASA","sourceRoot":""}